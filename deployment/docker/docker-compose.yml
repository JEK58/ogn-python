version: "3"
name: ogn-proxy
services:
  db:
    restart: always
    image: timescale/timescaledb-ha:pg15
    networks:
      - ogn
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ogn
    ports:
      - "127.0.0.1:5432:5432"

  redis:
    restart: always
    image: redis
    networks:
      - ogn
    ports:
      - "127.0.0.1:6379:6379"

  # ogn-pg-importer:
  #   image: ogn-pg-importer
  #   networks:
  #     - ogn
  #   depends_on:
  #     - db
  #     - backend
  #   volumes:
  #     - ./data:/data
  #   environment:
  #     PGHOST: db
  #     PGDATABASE: ogn
  #     PGPASSWORD: postgres
  #     PGUSER: postgres
  #     BACKENDHOST: backend
  #     BACKENDPORT: 8080

  backend:
    restart: always
    image: ogn:latest
    networks:
      - ogn
    depends_on:
      - db
      - redis
    ports:
      - "127.0.0.1:8080:8080"
    command: "flask run --host=0.0.0.0 -p 8080"
    volumes:
      - ./cups:/cups
    environment:
      PGHOST: db
      SQLALCHEMY_DATABASE_URI: "postgresql://postgres:postgres@db:5432/ogn"
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
      MODULE_NAME: "app"

  gateway:
    restart: always
    image: ogn:latest
    networks:
      - ogn
    depends_on:
      - db
      - redis
      - backend
    command: "./wait.sh flask gateway run"
    environment:
      SQLALCHEMY_DATABASE_URI: "postgresql://postgres:postgres@db:5432/ogn"
      CELERY_BROKER_URL: "redis"
      CELERY_RESULT_BACKEND: "redis"
      BACKENDHOST: backend
      BACKENDPORT: 8080
  worker:
    restart: always
    image: ogn:latest
    networks:
      - ogn
    depends_on:
      - db
      - redis
      - backend
    command: "./wait.sh celery -A celery_app worker -l info"
    environment:
      SQLALCHEMY_DATABASE_URI: "postgresql://postgres:postgres@db:5432/ogn"
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
      BACKENDHOST: backend
      BACKENDPORT: 8080
  beat:
    restart: always
    image: ogn:latest
    networks:
      - ogn
    depends_on:
      - db
      - redis
      - backend
    command: "./wait.sh celery -A celery_app beat -l info"
    environment:
      SQLALCHEMY_DATABASE_URI: "postgresql://postgres:postgres@db:5432/ogn"
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
      BACKENDHOST: backend
      BACKENDPORT: 8080
  flower:
    restart: always
    image: mher/flower
    networks:
      - ogn
    depends_on:
      - redis
    ports:
      - "127.0.0.1:5555:5555"
    command: "celery --broker=redis://redis:6379/0 flower --port=5555"

networks:
  ogn:
    driver: bridge

volumes:
  db_data:
